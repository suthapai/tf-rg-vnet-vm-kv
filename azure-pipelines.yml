# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
 - task: TerraformInstaller@1
   inputs:
     terraformVersion: 'latest'
 - task: TerraformTaskV4@4
   displayName: "terraform init"
   inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-resources/'
      backendServiceArm: 'Azureportal-devops-sc'
      backendAzureRmResourceGroupName: 'rg-tfstate'
      backendAzureRmStorageAccountName: 'sgtfstatefile'
      backendAzureRmContainerName: 'mytfstate'
      backendAzureRmKey: 'terraform.tfsatate'

 -   task: AzureKeyVault@2
     displayName: "KV integration"
     inputs:
      azureSubscription: 'Azureportal-devops-sc'
      KeyVaultName: 'iac-test12'
      SecretsFilter: '*'
      RunAsPreJob: false
 -  task: TerraformTaskV4@4
    displayName: "terraform plan"
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-resources/'
      environmentServiceNameAzureRM: 'Azureportal-devops-sc'
 - task: TerraformTaskV4@4
   inputs:
     provider: 'azurerm'
     command: 'apply'
     commandOptions: '-auto-approve'
     environmentServiceNameAzureRM: 'Azureportal-devops-sc'